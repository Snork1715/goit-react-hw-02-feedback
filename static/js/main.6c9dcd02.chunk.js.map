{"version":3,"sources":["components/Statistic/Statistic.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistic","good","neutral","bad","totalCount","goodPercnt","className","FeedbackOptions","types","onIncrement","map","type","onClick","shortid","generate","Section","title","children","Notification","App","state","onLeaveFeedback","btnType","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","document","getElementById"],"mappings":"yPAoBeA,EAhBG,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACnD,OACE,qBAAKC,UAAU,sBAAf,SACE,qBAAIA,UAAU,mBAAd,UACE,qBAAIA,UAAU,kBAAd,mBAAuCL,KACvC,qBAAIK,UAAU,qBAAd,sBAA6CJ,KAC7C,qBAAII,UAAU,iBAAd,kBAAqCH,KACrC,qBAAIG,UAAU,mBAAd,oBAAyCF,KACzC,qBAAIE,UAAU,sBAAd,gCACsBD,EADtB,c,gBCOOE,G,MAfS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAChC,OACE,qBAAKH,UAAU,mBAAf,SACGE,EAAME,KAAI,SAACC,GAAD,OACT,wBAEEA,KAAK,SACLC,QAAS,kBAAMH,EAAYE,IAH7B,SAKGA,GAJIE,IAAQC,mBCMRC,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IAAYC,MCARC,G,MAHM,SAAC,GAAe,IAAbF,EAAY,EAAZA,MACtB,OAAO,oBAAIV,UAAU,qBAAd,SAAoCU,MCGvCG,G,kNACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAUE,EAAUF,GAAW,O,EAIpCG,mBAAqB,WACnB,OAAO,EAAKL,MAAMlB,QAAU,EAAKkB,MAAMnB,KAAO,EAAKmB,MAAMjB,K,EAG3DuB,gCAAkC,WAChC,OAAO,EAAKN,MAAMnB,KAAO,EACrB0B,KAAKC,KAAwB,IAAlB,EAAKR,MAAMnB,KAAc,EAAKwB,sBACzC,G,4CAGN,WACE,OACE,sBAAKnB,UAAU,mBAAf,UACE,cAAC,EAAD,CAASU,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,MAAO,CAAC,OAAQ,UAAW,OAC3BC,YAAaoB,KAAKR,oBAGtB,cAAC,EAAD,CAASL,MAAM,aAAf,SACGa,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CACExB,KAAM4B,KAAKT,MAAMnB,KACjBC,QAAS2B,KAAKT,MAAMlB,QACpBC,IAAK0B,KAAKT,MAAMjB,IAChBC,WAAYyB,KAAKJ,qBACjBpB,WAAYwB,KAAKH,oCAGnB,cAAC,EAAD,CAAcV,MAAM,+B,GA1Cdc,cAkDHX,ICpDfY,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.6c9dcd02.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Statistic.css\";\r\nimport \"./Statistic.css\";\r\n\r\nconst Statistic = ({ good, neutral, bad, totalCount, goodPercnt }) => {\r\n  return (\r\n    <div className=\"feedback-statistica\">\r\n      <ul className=\"statistica_items\">\r\n        <li className=\"statistica_good\">Good: {good}</li>\r\n        <li className=\"statistica_neutral\">Neutral: {neutral}</li>\r\n        <li className=\"statistica_bad\">Bad: {bad}</li>\r\n        <li className=\"statistica_total\">Total: {totalCount}</li>\r\n        <li className=\"statistica_positive\">\r\n          Positive Feedback: {goodPercnt} %\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport \"./FeedbackOptions.css\";\r\n\r\nconst FeedbackOptions = ({ types, onIncrement }) => {\r\n  return (\r\n    <div className=\"feedback-buttons\">\r\n      {types.map((type) => (\r\n        <button\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          onClick={() => onIncrement(type)}\r\n        >\r\n          {type}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>{children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport \"./Notification.css\"\r\n\r\nconst Notification = ({ title }) => {\r\n  return <h1 className=\"Notification-title\">{title}</h1>;\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Statistic from \"./components/Statistic\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Section from \"./components/Section\";\r\nimport Notification from \"./components/Notification\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = (btnType) => {\r\n    this.setState((prevState) => ({\r\n      [btnType]: prevState[btnType] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.neutral + this.state.good + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return this.state.good > 0\r\n      ? Math.ceil((this.state.good * 100) / this.countTotalFeedback())\r\n      : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"feedback-wrapper\">\r\n        <Section title=\"Please Leave Feedback\">\r\n          <FeedbackOptions\r\n            types={[\"good\", \"neutral\", \"bad\"]}\r\n            onIncrement={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistic\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              totalCount={this.countTotalFeedback()}\r\n              goodPercnt={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification title=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}